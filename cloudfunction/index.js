const functions = require('firebase-functions');

// Substitui palavras-chave com emoji na chave "text" de mensagens enviadas
// para /messages
exports.emojify =
    functions.database.ref('/messages/{pushId}/text')
    .onWrite(event => {
        // Eventos de grava√ß√£o no banco de dados incluem n√≥s de dados novos,
        // modificados, ou deletados. Todos os tr√™s tipos de eventos no
        // caminho espec√≠fico do banco de dados ativam esta cloud function.
        // Para esta fun√ß√£o n√≥s queremos apenas emojificar novos n√≥s de banco de dados,
        // ent√£o primeiramente checaremos para sair da fun√ß√£o previamente
        // caso n√£o haja uma nova mensagem.

        // !event.data.val() √© um evento deletado
        // event.data.previous.val() √© um evento modificado
        if (!event.data.val() || event.data.previous.val()) {
            console.log("not a new write event");
            return;
        }

        // Agora come√ßaremos a transforma√ß√£o de emoji
        console.log("emojifying!");

        // Obt√©m o valor da chave 'text' da mensagem
        const originalText = event.data.val();
        const emojifiedText = emojifyText(originalText);

        // Retorna um Promise de JavaScript para atualizar o n√≥ do banco de dados
        return event.data.ref.set(emojifiedText);
    });

// Retorna texto com palavras-chave substitu√≠das por emoji
// substituindo com a express√£o regular /.../ig faz uma busca
// case-insensitive (i flag) para todas as ocorr√™ncias (g flag) na string
function emojifyText(text) {
    var emojifiedText = text;
    emojifiedText = emojifiedText.replace(/\blol\b/ig, "üòÇ");
    emojifiedText = emojifiedText.replace(/\bcat\b/ig, "üò∏");
    return emojifiedText;
}